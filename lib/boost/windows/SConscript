# -*- mode: python; -*-
# windows reference: http://www.boost.org/doc/libs/1_62_0/more/getting_started/windows.html
import os
import sys
import shutil

boost_root = os.getenv('BOOST_ROOT')
if boost_root is None:
    print('BOOST_ROOT environment variable is not set')
    sys.exit(1)

env = DefaultEnvironment()

if env['OPT'] == 'debug':
    lib_file_flag = '-gd'
elif env['OPT'] == 'production':
    lib_file_flag = ''

libpath = Dir(boost_root).abspath
if not os.path.exists(libpath):
    print('%s not present' % libpath)
    sys.exit(1)

libraries = [
    'system',
    'program_options',
    'regex',
    'date_time',
    'thread',
    'filesystem',
    'chrono',
]

def get_destinations_for_library(library):
    lib_dir = '#build/lib/'
    return [
        File(lib_dir + 'boost_{}.lib'.format(library)),
        File(lib_dir + 'libboost_{}-vc140-mt{}-1_62.lib'.format(library, lib_file_flag))
    ]

def copy_boost_lib(to_file, library=None):
    if not os.path.exists(to_file):
        from_file = '{}/lib64-msvc-14.0/libboost_{}-vc140-mt{}-1_62.lib'.format(
            Dir(boost_root).abspath, library, lib_file_flag)
        print('Copying {} to {}'.format(from_file, to_file))
        shutil.copyfile(from_file, to_file)

def prepare_boost_libs(target, source, env):
    for library in libraries:
        destinations = get_destinations_for_library(library)
        for dest in destinations:
            copy_boost_lib(dest.abspath, library)


products = [get_destinations_for_library(l) for l in libraries]
boost_command = env.Command(products, Dir(boost_root), prepare_boost_libs)
env.Alias('boostbuild', boost_command)
